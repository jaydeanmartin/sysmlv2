FROM openjdk:17-slim

##
## This Dockerfile is specifically designed to be run with the API Server
## and started via docker-compose. It makes assumptions about the existence
## of an docker internal network.
##

## wget is used to retrieve Conda and SysML Release. Inkscape and LaTeX is
## required for rendering notebooks as PDFs.
RUN apt-get --quiet --yes update && apt-get install -yqq \
  gcc                         \
  wget                        \
  curl                        \
  libxrender1       \
  libxext6           \
  gnupg                       
 

# RUN apt-get install -y nodejs

##
## Non-root user is a requirement of Binder:
##   https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html
##
ARG NB_USER=sysml
ARG NB_UID=1000
ENV USER=${NB_USER}
ENV NB_UID=${NB_UID}
ENV HOME=/home/${NB_USER}

RUN adduser --disabled-password \
    --gecos "Default user" \
    --uid ${NB_UID} \
    ${NB_USER}

USER root
RUN chown -R ${NB_UID} ${HOME}


## Switch to the lowly user, no more root.
USER ${NB_USER}
WORKDIR ${HOME}

##
## Miniconda installation page:
## https://docs.conda.io/en/latest/miniconda.html#linux-installers
##
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

## Defining the RELEASE down here ensures that the previous comamnds can
## be recycled since they're not affected by the release version.
ARG RELEASE=2024-12

##
## SysML page: https://github.com/Systems-Modeling/SysML-v2-Release
##
RUN wget -q https://github.com/Systems-Modeling/SysML-v2-Release/archive/${RELEASE}.tar.gz -O ${RELEASE}.tar.gz

## Install MiniConda
RUN chmod 755 ${HOME}/Miniconda3-latest-Linux-x86_64.sh
RUN mkdir ${HOME}/conda
RUN ${HOME}/Miniconda3-latest-Linux-x86_64.sh -f -b -p ${HOME}/conda

USER root
RUN ${HOME}/conda/condabin/conda init

USER ${NB_USER}


## Unpack SysML
RUN tar xzf ${RELEASE}.tar.gz

COPY --chown=${NB_USER} jupyter_server_config.py ${HOME}/SysML-v2-Release-${RELEASE}

WORKDIR ${HOME}/SysML-v2-Release-${RELEASE}/install/jupyter

## This is the path that conda init setups but conda init has no effect
## here, so setup the PATH by hand. Else install.sh won't work.
ENV PATH="/usr/local/openjdk-17/bin:${HOME}/conda/bin:${HOME}/conda/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

## Install terminal notebook editor - https://github.com/joouha/euporie
RUN pip install euporie

## Install SysMLv2 as Jupyter Kernel
ENV JUPYTER_ENABLE_LAB=yes
ENV JUPYTER_TOKEN=sysmlv2

RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash 

# need to copy a version of install.sh that does not try to install nodejs 
# it installs version 12, when 14 is required by jupyter
COPY --chown=${NB_USER} install.sh .
RUN chmod 755 ./install.sh

# set env
ENV NVM_DIR=${HOME}/.nvm
ENV NODE_VERSION=14
# install node and
# Install SysMLv2 as Jupyter Kernel
RUN . $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && ./install.sh

## Uninstall the terminal feature for security reasons
# RUN pip uninstall -y terminado
RUN pip install pandas
RUN pip install numpy
RUN pip install matplotlib
RUN pip install scipy

WORKDIR ${HOME}/SysML-v2-Release-${RELEASE}/

## Move any files in the top level directory to the doc directory
RUN find . -maxdepth 1 -type f -exec mv \{\} doc \;

## Copy example notebooks into the image
RUN mkdir notebooks
COPY --chown=${NB_USER} notebooks/ notebooks/
COPY --chown=${NB_USER} jupyter_server_config.py .


# Move some top level notebooks to the toplevel
RUN mv notebooks/*/StartHere.ipynb .
RUN mv notebooks/*.ipynb .

## Trust the notebooks so that the SVG images will be displayed.
# RUN find . -name \*.ipynb -exec jupyter trust \{\} \;

USER ${NB_USER}

## Point the publish command to the local API server.
RUN sed s/sysml2.intercax.com:9000/sysmlapiserver:9000/ -i ${HOME}/conda/share/jupyter/kernels/sysml/kernel.json


EXPOSE 8888
# ENTRYPOINT jupyter lab --ip sysmljupyter --port 8888
ENTRYPOINT jupyter lab --ip sysmljupyter --config ./jupyter_server_config.py
# ENTRYPOINT jupyter server --ip sysmljupyter --config ${HOME}/jupyter_server_config.py 
